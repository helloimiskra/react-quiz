[{"/Users/iskrabatistapoblete/Development/Practice/react-quiz/src/index.tsx":"1","/Users/iskrabatistapoblete/Development/Practice/react-quiz/src/reportWebVitals.ts":"2","/Users/iskrabatistapoblete/Development/Practice/react-quiz/src/App.tsx":"3","/Users/iskrabatistapoblete/Development/Practice/react-quiz/src/components/QuestionCard.tsx":"4","/Users/iskrabatistapoblete/Development/Practice/react-quiz/src/API.ts":"5"},{"size":478,"mtime":1607275154682,"results":"6","hashOfConfig":"7"},{"size":425,"mtime":1607274873507,"results":"8","hashOfConfig":"7"},{"size":1418,"mtime":1607404057025,"results":"9","hashOfConfig":"7"},{"size":109,"mtime":1607276412215,"results":"10","hashOfConfig":"7"},{"size":360,"mtime":1607403939417,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1q0biz8",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/iskrabatistapoblete/Development/Practice/react-quiz/src/index.tsx",[],["24","25"],"/Users/iskrabatistapoblete/Development/Practice/react-quiz/src/reportWebVitals.ts",[],"/Users/iskrabatistapoblete/Development/Practice/react-quiz/src/App.tsx",["26","27","28","29","30","31","32","33","34","35","36","37","38","39"],"import React, { useState } from 'react';\nimport QuestionCard from './components/QuestionCard';\nimport { fetchQuizQuestions } from './API';\nimport { Difficulty } from './API'\n\nconst TOTAL_QUESTIONS = 10;\n\nconst App = () => {\n  const [loading, setLoading] = useState(false);\n  const [questions, setQuestions] = useState([]);\n  const [number, setNumber] = useState(0);\n  const [userAnswers, setUserAnswers] = useState([]);\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver]  = useState(true);\n\n  console.log(fetchQuizQuestions(TOTAL_QUESTIONS, Difficulty.EASY ))\n  \n  const startTrivia = async () => {\n\n  };\n\n  const checkAnswer = (e: React.MouseEvent<HTMLButtonElement>) => {\n\n  };\n\n  const nextQuestion = () => {\n\n\n  };\n  \n  \n  return (\n    <div className=\"App\">\n      <h1>React Quiz</h1>\n      <button className = \"start\" onClick={startTrivia}>\n        Start \n      </button>\n\n      <p className=\"score\">Score</p>\n      <p>Loading Questions...</p>\n      {/* <QuestionCard\n        questionNr={number+1}\n        totalQuestions={TOTAL_QUESTIONS}\n        question={questions[number].question}\n        answers={questions[number].answers}\n        userAnswers={userAnswers ? userAnswers[number] : undefined}\n        callback={checkAnswer}\n        \n        /> */}\n      <button className =\"next\" onClick={nextQuestion}>\n        Next Question\n      </button>\n      \n    </div>\n  );\n}\n\nexport default App;\n","/Users/iskrabatistapoblete/Development/Practice/react-quiz/src/components/QuestionCard.tsx",[],"/Users/iskrabatistapoblete/Development/Practice/react-quiz/src/API.ts",[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":2,"column":8,"nodeType":"46","messageId":"47","endLine":2,"endColumn":20},{"ruleId":"44","severity":1,"message":"48","line":9,"column":10,"nodeType":"46","messageId":"47","endLine":9,"endColumn":17},{"ruleId":"44","severity":1,"message":"49","line":9,"column":19,"nodeType":"46","messageId":"47","endLine":9,"endColumn":29},{"ruleId":"44","severity":1,"message":"50","line":10,"column":10,"nodeType":"46","messageId":"47","endLine":10,"endColumn":19},{"ruleId":"44","severity":1,"message":"51","line":10,"column":21,"nodeType":"46","messageId":"47","endLine":10,"endColumn":33},{"ruleId":"44","severity":1,"message":"52","line":11,"column":10,"nodeType":"46","messageId":"47","endLine":11,"endColumn":16},{"ruleId":"44","severity":1,"message":"53","line":11,"column":18,"nodeType":"46","messageId":"47","endLine":11,"endColumn":27},{"ruleId":"44","severity":1,"message":"54","line":12,"column":10,"nodeType":"46","messageId":"47","endLine":12,"endColumn":21},{"ruleId":"44","severity":1,"message":"55","line":12,"column":23,"nodeType":"46","messageId":"47","endLine":12,"endColumn":37},{"ruleId":"44","severity":1,"message":"56","line":13,"column":10,"nodeType":"46","messageId":"47","endLine":13,"endColumn":15},{"ruleId":"44","severity":1,"message":"57","line":13,"column":17,"nodeType":"46","messageId":"47","endLine":13,"endColumn":25},{"ruleId":"44","severity":1,"message":"58","line":14,"column":10,"nodeType":"46","messageId":"47","endLine":14,"endColumn":18},{"ruleId":"44","severity":1,"message":"59","line":14,"column":20,"nodeType":"46","messageId":"47","endLine":14,"endColumn":31},{"ruleId":"44","severity":1,"message":"60","line":22,"column":9,"nodeType":"46","messageId":"47","endLine":22,"endColumn":20},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"@typescript-eslint/no-unused-vars","'QuestionCard' is defined but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'questions' is assigned a value but never used.","'setQuestions' is assigned a value but never used.","'number' is assigned a value but never used.","'setNumber' is assigned a value but never used.","'userAnswers' is assigned a value but never used.","'setUserAnswers' is assigned a value but never used.","'score' is assigned a value but never used.","'setScore' is assigned a value but never used.","'gameOver' is assigned a value but never used.","'setGameOver' is assigned a value but never used.","'checkAnswer' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]